<?xml version="1.0" encoding="UTF-8"?>
<!-- LICENSE_PLACEHOLDER -->
<izpack:installation version="5.0"
	xmlns:izpack="http://izpack.org/schema/installation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://izpack.org/schema/installation http://izpack.org/schema/5.0/izpack-installation-5.0.xsd">

	<info>
		<appname>REGARDS</appname>
		<appversion>@{regards.izpack.panels.version}</appversion>
		<appsubpath>regards</appsubpath>
		<javaversion>@{java.version}</javaversion>
		<requiresjdk>no</requiresjdk>
		<url>https://github.com/regards</url>
		<pack-compression-format>gz</pack-compression-format>
		<authors>
			<author name="CS" email="regards@c-s.fr" />
		</authors>
	</info>

	<locale>
		<langpack iso3="eng" />
	</locale>

	<logging>
		<log-file pattern="regards_install.log" append="false" level="ALL" />
	</logging>

	<guiprefs width="800" height="600" resizable="no">
		<laf name="looks">
			<os family="unix" />
			<os family="windows" />
			<os family="mac" />
			<param name="variant" value="plastic" />
		</laf>
		<modifier key="useButtonIcons" value="no" />
		<modifier key="useLabelIcons" value="no" />
		<modifier key="labelGap" value="2" />
		<modifier key="layoutAnchor" value="NORTHWEST" />
		<modifier key="useHeadingPanel" value="yes" />
		<modifier key="headingImageOnLeft" value="yes" />
		<modifier key="headingLineCount" value="1" />
		<modifier key="headingFontSize" value="1.5" />
		<modifier key="headingBackgroundColor" value="0x00ffffff" />
		<modifier key="headingPanelCounter" value="text" />
		<modifier key="headingPanelCounterPos" value="inHeading" />
		<modifier key="useSplashScreen" value="3000" />
	</guiprefs>

	<resources>
		<res id="InfoPanel.info" src="doc/readme.txt" parse="yes" />
		<res id="LicencePanel.licence" src="legal/License.txt" />
		<res id="Splash.image" src="images/splash.jpg" />
		<res id="userInputSpec.xml" src="userInputSpec.xml" parse="yes"
			type="xml" />
		<res id="ProcessPanel.Spec.xml" src="ProcessPanel.Spec.xml" parse="yes"
			type="xml" />
		<res id="userInputLang.xml_eng" src="i18n/userInputLang.xml_eng" />
	</resources>

	<jar src="custom/regards-izpack-panels.jar" stage="install" />
	<jar src="custom/regards-izpack-utils.jar" stage="install" />

	<dynamicvariables>
		<!-- Security -->
		<variable name="regards.config.regards.microservices.exec.user"
			value="regards" />
		<variable name="regards.config.regards.microservices.regards.group"
			value="regards" />
		<variable name="regards.config.regards.microservices.exec.group"
			value="rsexec" />
		<variable name="regards.config.regards.microservices.admin.group"
			value="rsadmin" />
		<variable name="regards.config.regards.microservices.runtime.group"
			value="rsrun" />

		<!-- Common -->
		<variable name="project" value="Default" />

		<!-- Config microservice -->
		<variable name="config.count" value="0" /> <!-- TODO: Don't think we can have multiple -->
		<variable name="regards.config.cloud.config.address" value="localhost" />
		<variable name="regards.config.cloud.config.port" value="8888" />

		<!-- Registry microservice -->
		<variable name="registry.count" value="0" />
		<variable name="regards.config.cloud.registry.host" value="localhost" />
		<variable name="regards.config.cloud.registry.port" value="8761" />

		<!-- Gateway microservice -->
		<variable name="regards.config.cloud.gateway.uri" value="localhost" />
		<variable name="regards.config.cloud.gateway.port" value="8000" />
		<variable name="gateway.count" value="0" />
		<variable name="gateway.host" value="localhost" />
		<variable name="gateway.port" value="8000" />
		<variable
			name="regards.config.gateway.regards.jpa.multitenant.tenants.url.1"
			value="localhost:5432/rs_gateway_tenant0" />
		<variable
			name="regards.config.gateway.regards.jpa.multitenant.tenants.user.name.1"
			value="rs_gateway_tenant0_user" />
		<variable
			name="regards.config.gateway.regards.jpa.multitenant.tenants.password.1"
			value="rs_gateway_tenant0_pwd" />

		<!-- Message broker -->
		<variable name="regards.config.spring.rabbitmq.host" value="localhost" />
		<variable name="regards.config.spring.rabbitmq.port" value="5672" />
		<variable name="regards.config.spring.rabbitmq.username"
			value="guest" />
		<variable name="regards.config.spring.rabbitmq.password"
			value="guest" />
		<variable name="regards.config.regards.amqp.management.host"
			value="localhost" />
		<variable name="regards.config.regards.amqp.management.port"
			value="15672" />

		<!-- Admin microservice -->
		<variable name="admin.count" value="0" />
		<variable name="admin.host" value="localhost" />
		<variable name="admin.port" value="8777" />
		<variable name="regards.config.admin.regards.accounts.root.user.login"
			value="regards-admin@c-s.fr" />
		<variable name="regards.config.admin.regards.accounts.root.user.password"
			value="root_admin" />
		<variable name="regards.config.admin.regards.jpa.instance.datasource.url"
			value="localhost:5432/rs_admin_instance" />
		<variable
			name="regards.config.admin.regards.jpa.instance.datasource.user.name"
			value="rs_admin_user" />
		<variable
			name="regards.config.admin.regards.jpa.instance.datasource.password"
			value="rs_admin_pwd" />
		<variable name="regards.config.admin.regards.jpa.multitenant.tenants.url.1"
			value="localhost:5432/rs_admin_tenant0" />
		<variable
			name="regards.config.admin.regards.jpa.multitenant.tenants.user.name.1"
			value="rs_admin_tenant0_user" />
		<variable
			name="regards.config.admin.regards.jpa.multitenant.tenants.password.1"
			value="rs_admin_tenant0_pwd" />

		<!-- AccountPanel -->
		<variable name="regards.accounts.validity.duration" value="30" />
		<variable name="regards.config.admin.accounts.password.regex"
			value="[a-z0-9]*" />
		<variable name="regards.config.admin.accounts.password.rules"
			value="Password should contain letters or numbers" />
		<variable name="regards.config.admin.accounts.password.validity.duration"
			value="350" />
		<variable name="regards.config.admin.accounts.failed.authentication.max"
			value="5" />

		<!-- Dam Microservice -->
		<variable name="dam.count" value="0" />
		<variable name="dam.host" value="localhost" />
		<variable name="dam.port" value="8080" />
		<variable name="regards.config.dam.regards.jpa.multitenant.tenants.url.1"
			value="localhost:5432/rs_dam_tenant0" />
		<variable
			name="regards.config.dam.regards.jpa.multitenant.tenants.user.name.1"
			value="rs_dam_tenant0_user" />
		<variable
			name="regards.config.dam.regards.jpa.multitenant.tenants.password.1"
			value="rs_dam_tenant0_pwd" />

		<!-- Catalog microservice -->
		<variable name="catalog.count" value="0" />
		<variable name="catalog.host" value="localhost" />
		<variable name="catalog.port" value="4444" />

		<!-- Access Instance microservice -->
		<variable name="access-instance.count" value="0" />
		<variable name="access-instance.host" value="localhost" />
		<variable name="access-instance.port" value="8990" />
		<variable
			name="regards.config.access.instance.regards.jpa.instance.datasource.url"
			value="localhost:5432/rs_acces_instance" />
		<variable
			name="regards.config.access.instance.regards.jpa.instance.datasource.user.name"
			value="rs_acces_user" />
		<variable
			name="regards.config.access.instance.regards.jpa.instance.datasource.password"
			value="rs_acces_pwd" />

		<!-- Access Project microservice -->
		<variable name="access-project.count" value="0" />
		<variable name="access-project.host" value="localhost" />
		<variable name="access-project.port" value="9990" />
		<variable
			name="regards.config.access.project.regards.jpa.multitenant.tenants.url.1"
			value="localhost:5432/rs_access_projet_tenant0" />
		<variable
			name="regards.config.access.project.regards.jpa.multitenant.tenants.user.name.1"
			value="rs_access_projet_tenant0_user" />
		<variable
			name="regards.config.access.project.regards.jpa.multitenant.tenants.password.1"
			value="rs_access_projet_tenant0_pwd" />

		<!-- Frontend -->
		<variable name="frontend.count" value="0" />
		<variable name="frontend.host" value="localhost" />
		<variable name="frontend.port" value="3333" />

		<!-- Internal variables for workflow management -->
		<variable name="installation.type" value="full" />
		<variable name="security.level" value="normal" />
		<variable name="frontend.selected" value="true" />
		<variable name="registry.selected" value="false" />
		<variable name="gateway.selected" value="false" />
		<variable name="admin.selected" value="false" />
		<variable name="dam.selected" value="false" />
		<variable name="catalog.selected" value="false" />
		<variable name="access.selected" value="false" />
		<variable name="storage.selected" value="false" />
	</dynamicvariables>

	<conditions>
		<condition type="variable" id="isSecurityEnforced">
			<name>security.level</name>
			<value>enforce</value>
		</condition>
		<condition type="variable" id="fullInstallation">
			<name>installation.type</name>
			<value>full</value>
		</condition>
		<condition type="variable" id="addInstallation">
			<name>installation.type</name>
			<value>add</value>
		</condition>
		<condition type="variable" id="isFrontendSelected">
			<name>frontend.selected</name>
			<value>true</value>
		</condition>
		<condition type="variable" id="isRegistrySelected">
			<name>registry.selected</name>
			<value>true</value>
		</condition>
		<condition type="variable" id="isGatewaySelected">
			<name>gateway.selected</name>
			<value>true</value>
		</condition>
		<condition type="variable" id="isAdminSelected">
			<name>admin.selected</name>
			<value>true</value>
		</condition>
		<condition type="variable" id="isDamSelected">
			<name>dam.selected</name>
			<value>true</value>
		</condition>
		<condition type="variable" id="isCatalogSelected">
			<name>catalog.selected</name>
			<value>true</value>
		</condition>
		<condition type="variable" id="isAccessSelected">
			<name>access.selected</name>
			<value>true</value>
		</condition>
		<condition type="variable" id="isStorageSelected">
			<name>storage.selected</name>
			<value>true</value>
		</condition>

		<condition type="or" id="atLeastOneMiscroserviceSelected">
			<condition type="ref" refid="isRegistrySelected" />
			<condition type="ref" refid="isGatewaySelected" />
			<condition type="ref" refid="isAdminSelected" />
			<condition type="ref" refid="isDamSelected" />
			<condition type="ref" refid="isCatalogSelected" />
			<condition type="ref" refid="isAccessSelected" />
			<condition type="ref" refid="isStorageSelected" />
		</condition>

		<condition type="or" id="mustInstallFrontend">
			<condition type="ref" refid="fullInstallation" />
			<condition type="ref" refid="isFrontendSelected" />
		</condition>
		<condition type="or" id="mustInstallRegistry">
			<condition type="ref" refid="fullInstallation" />
			<condition type="ref" refid="isRegistrySelected" />
		</condition>
		<condition type="or" id="mustInstallGateway">
			<condition type="ref" refid="fullInstallation" />
			<condition type="ref" refid="isGatewaySelected" />
		</condition>
		<condition type="or" id="mustInstallAdmin">
			<condition type="ref" refid="fullInstallation" />
			<condition type="ref" refid="isAdminSelected" />
		</condition>
		<condition type="or" id="mustInstallDam">
			<condition type="ref" refid="fullInstallation" />
			<condition type="ref" refid="isDamSelected" />
		</condition>
		<condition type="or" id="mustInstallCatalog">
			<condition type="ref" refid="fullInstallation" />
			<condition type="ref" refid="isCatalogSelected" />
		</condition>
		<condition type="or" id="mustInstallAccess">
			<condition type="ref" refid="fullInstallation" />
			<condition type="ref" refid="isAccessSelected" />
		</condition>
	</conditions>

	<panels>
		<panel classname="HelloPanel" />
		<panel classname="LicencePanel" />
		<panel classname="TargetPanel" />
		<panel classname="UserInputPanel" id="SelectSecurityLevelPanel" />
		<panel classname="UserInputPanel" id="ConfigSecurityPanel"
			condition="isSecurityEnforced" />
		<panel classname="UserInputPanel" id="SelectInstallationTypePanel" />
		<panel classname="UserInputPanel" id="SelectComponentsPanel"
			condition="addInstallation" />
		<panel classname="UserInputPanel" id="LinkToExistingConfigPanel"
			condition="atLeastOneMiscroserviceSelected" />
		<panel classname="UserInputPanel" id="ProjectPanel" condition="fullInstallation" />
		<panel classname="UserInputPanel" id="ConfigPanel" condition="fullInstallation" />
		<panel classname="UserInputPanel" id="RegistryPanel" condition="mustInstallRegistry" />
		<panel classname="UserInputPanel" id="GatewayPanel" condition="mustInstallGateway" />
		<panel classname="UserInputPanel" id="RabbitmqPanel" condition="fullInstallation" />
		<panel classname="UserInputPanel" id="AdminPanel" condition="mustInstallAdmin" />
		<panel classname="UserInputPanel" id="AccountsPanel" condition="mustInstallAdmin" />
		<panel classname="UserInputPanel" id="DamPanel" condition="mustInstallDam" />
		<panel classname="UserInputPanel" id="CatalogPanel" condition="mustInstallCatalog" />
		<panel classname="UserInputPanel" id="AccessInstancePanel"
			condition="mustInstallAccess" />
		<panel classname="UserInputPanel" id="AccessProjectPanel"
			condition="mustInstallAccess" />
		<panel classname="UserInputPanel" id="FrontendPanel" condition="mustInstallFrontend" />
		<panel classname="SummaryPanel" />
		<panel classname="InstallPanel" />
		<panel classname="ProcessPanel" />
		<panel classname="FinishPanel" />
	</panels>
	<!-- <validator classname="fr.cnes.regards.deployment.izpack.validator.ValidatorFrontendPanel" 
		/> -->

	<packs>

		<pack name="Core" required="true" preselected="true" hidden="true">
			<description>Core installation. Required for any component.</description>
			<file targetdir="$INSTALL_PATH" src="doc/readme.txt" override="true" />
			<file targetdir="$INSTALL_PATH" src="legal/License.txt"
				override="true" />
			<file targetdir="$INSTALL_PATH/REGARDS/config" src="config/system.properties"
				override="true" />
			<file targetdir="$INSTALL_PATH/REGARDS/config" src="config/bootstrap.properties"
				override="true" />
			<fileset dir="bin/" targetdir="$INSTALL_PATH/REGARDS/bin"
				override="true">
				<include name="*" />
			</fileset>
			<fileset dir="sbin/" targetdir="$INSTALL_PATH/REGARDS/sbin"
				override="true">
				<include name="*" />
			</fileset>
			<fileset dir="lib/" targetdir="$INSTALL_PATH/REGARDS/lib"
				override="true">
				<include name="*" />
			</fileset>
			<fileset dir="utils/" targetdir="$INSTALL_PATH/REGARDS/lib"
				override="true">
				<include name="*.jar" />
			</fileset>
			<parsable type="javaprop"
				targetfile="$INSTALL_PATH/REGARDS/config/system.properties" />
			<parsable type="javaprop"
				targetfile="$INSTALL_PATH/REGARDS/config/bootstrap.properties" />
			<executable type="bin" stage="never" keep="true">
				<fileset targetdir="$INSTALL_PATH/REGARDS/bin" includes="*" />
				<fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" />
			</executable>
		</pack>

		<pack name="frontend" required="false" preselected="true">
			<description>Web application serving the frontend</description>
			<!-- <fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS" override="true"> 
				<include name="bootstrap-frontend.*ar" /> </fileset> <fileset dir="sbin/frontend/" 
				targetdir="$INSTALL_PATH/REGARDS/sbin" override="true"> <include name="*" 
				/> </fileset> <fileset dir="config/static" targetdir="$INSTALL_PATH/REGARDS/www" 
				override="true"> <include name="**/*" /> </fileset> <parsable type="plain"> 
				<fileset targetdir="$INSTALL_PATH/REGARDS/www" includes="**/*.js" /> </parsable> 
				<executable type="bin" stage="never" keep="true"> <fileset targetdir="$INSTALL_PATH/REGARDS/sbin" 
				includes="*" /> </executable> <executable targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy" 
				type="bin" stage="postinstall" failure="abort" keep="true"> <os family="unix" 
				/> <args> <arg value="-i" /> <arg value="$INSTALL_PATH/REGARDS" /> <arg value="-t" 
				/> <arg value="frontend" /> <arg value="-c" /> <arg value="${microservice.frontend.microserviceList}" 
				/> </args> </executable> -->
		</pack>

		<pack name="conf" required="false" preselected="true" hidden="true"
			condition="fullInstallation">
			<description>Microservice providing configuration to any other microservice</description>
			<!-- <fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS" override="true"> 
				<include name="bootstrap-config.jar" /> </fileset> <fileset dir="sbin/conf/" 
				targetdir="$INSTALL_PATH/REGARDS/sbin" override="true"> <include name="*" 
				/> </fileset> <fileset dir="config/BOOT-INF/classes/regards" targetdir="$INSTALL_PATH/REGARDS/config/regards" 
				override="true"> <include name="*" /> </fileset> <parsable type="javaprop"> 
				<fileset targetdir="$INSTALL_PATH/REGARDS/config/regards"> <include name="*.properties" 
				/> </fileset> </parsable> <executable type="bin" stage="never" keep="true"> 
				<fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" /> </executable> 
				<executable targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy" 
				type="bin" stage="postinstall" failure="abort" keep="true"> <os family="unix" 
				/> <args> <arg value="-i" /> <arg value="$INSTALL_PATH/REGARDS" /> <arg value="-t" 
				/> <arg value="conf" /> <arg value="-c" /> <arg value="${microservice.conf.microserviceList}" 
				/> </args> </executable> -->
		</pack>

		<pack name="registry" required="false" preselected="true">
			<description>Microservice registring other microservices in the cloud and handling load balancing</description>
			<!-- <fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS" override="true"> 
				<include name="bootstrap-registry.jar" /> </fileset> <fileset dir="sbin/registry" 
				targetdir="$INSTALL_PATH/REGARDS/sbin" override="true"> <include name="*" 
				/> </fileset> <executable type="bin" stage="never" keep="true"> <fileset 
				targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" /> </executable> <executable 
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy" 
				type="bin" stage="postinstall" failure="abort" keep="true"> <os family="unix" 
				/> <args> <arg value="-i" /> <arg value="$INSTALL_PATH/REGARDS" /> <arg value="-t" 
				/> <arg value="registry" /> <arg value="-c" /> <arg value="${microservice.registry.microserviceList}" 
				/> </args> </executable> -->
		</pack>

		<pack name="gateway" required="false" preselected="true">
			<description>Gateway between clients and all microservices</description>
			<!-- <fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS" override="true"> 
				<include name="bootstrap-gateway.jar" /> </fileset> <fileset dir="sbin/gateway" 
				targetdir="$INSTALL_PATH/REGARDS/sbin" override="true"> <include name="*" 
				/> </fileset> <executable type="bin" stage="never" keep="true"> <fileset 
				targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" /> </executable> <executable 
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy" 
				type="bin" stage="postinstall" failure="abort" keep="true"> <os family="unix" 
				/> <args> <arg value="-i" /> <arg value="$INSTALL_PATH/REGARDS" /> <arg value="-t" 
				/> <arg value="gateway" /> <arg value="-c" /> <arg value="${microservice.gateway.microserviceList}" 
				/> </args> </executable> -->
		</pack>

		<pack name="admin" required="false" preselected="true">
			<description>Microservice handling system's administration</description>
			<!-- <fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS" override="true"> 
				<include name="bootstrap-administration.jar" /> </fileset> <fileset dir="sbin/admin" 
				targetdir="$INSTALL_PATH/REGARDS/sbin" override="true"> <include name="*" 
				/> </fileset> <executable type="bin" stage="never" keep="true"> <fileset 
				targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" /> </executable> <executable 
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy" 
				type="bin" stage="postinstall" failure="abort" keep="true"> <os family="unix" 
				/> <args> <arg value="-i" /> <arg value="$INSTALL_PATH/REGARDS" /> <arg value="-t" 
				/> <arg value="admin" /> <arg value="-c" /> <arg value="${microservice.admin.microserviceList}" 
				/> </args> </executable> -->
		</pack>

		<pack name="dam" required="false" preselected="true">
			<description>REGARDS Data Management service installation</description>
			<!-- <fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS" override="true"> 
				<include name="bootstrap-dam.jar" /> </fileset> <fileset dir="sbin/dam" targetdir="$INSTALL_PATH/REGARDS/sbin" 
				override="true"> <include name="*" /> </fileset> <executable type="bin" stage="never" 
				keep="true"> <fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" 
				/> </executable> <executable targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy" 
				type="bin" stage="postinstall" failure="abort" keep="true"> <os family="unix" 
				/> <args> <arg value="-i" /> <arg value="$INSTALL_PATH/REGARDS" /> <arg value="-t" 
				/> <arg value="dam" /> <arg value="-c" /> <arg value="${microservice.dam.microserviceList}" 
				/> </args> </executable> -->
		</pack>

		<pack name="catalog" required="false" preselected="true">
			<description>REGARDS Catalog service installation</description>
			<!-- <fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS" override="true"> 
				<include name="bootstrap-catalog.jar" /> </fileset> <fileset dir="sbin/catalog" 
				targetdir="$INSTALL_PATH/REGARDS/sbin" override="true"> <include name="*" 
				/> </fileset> <executable type="bin" stage="never" keep="true"> <fileset 
				targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" /> </executable> <executable 
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy" 
				type="bin" stage="postinstall" failure="abort" keep="true"> <os family="unix" 
				/> <args> <arg value="-i" /> <arg value="$INSTALL_PATH/REGARDS" /> <arg value="-t" 
				/> <arg value="catalog" /> <arg value="-c" /> <arg value="${microservice.catalog.microserviceList}" 
				/> </args> </executable> -->
		</pack>

		<pack name="access" required="false" preselected="true">
			<description>REGARDS Access service installation</description>
			<!-- <fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS" override="true"> 
				<include name="bootstrap-access-instance.jar" /> <include name="bootstrap-access-project.jar" 
				/> </fileset> <fileset dir="sbin/access" targetdir="$INSTALL_PATH/REGARDS/sbin" 
				override="true"> <include name="*" /> </fileset> <executable type="bin" stage="never" 
				keep="true"> <fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" 
				/> </executable> <executable targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy" 
				type="bin" stage="postinstall" failure="abort" keep="true"> <os family="unix" 
				/> <args> <arg value="-i" /> <arg value="$INSTALL_PATH/REGARDS" /> <arg value="-t" 
				/> <arg value="access-instance" /> <arg value="-c" /> <arg value="${microservice.access-instance.microserviceList}" 
				/> </args> </executable> <executable targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy" 
				type="bin" stage="postinstall" failure="abort" keep="true"> <os family="unix" 
				/> <args> <arg value="-i" /> <arg value="$INSTALL_PATH/REGARDS" /> <arg value="-t" 
				/> <arg value="access-project" /> <arg value="-c" /> <arg value="${microservice.access-project.microserviceList}" 
				/> </args> </executable> -->
		</pack>
	</packs>

</izpack:installation>
