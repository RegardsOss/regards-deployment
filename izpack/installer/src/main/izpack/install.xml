<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2017 CNES - CENTRE NATIONAL d'ETUDES SPATIALES
 
 This file is part of REGARDS.
 
 REGARDS is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 REGARDS is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with REGARDS. If not, see <http://www.gnu.org/licenses/>.
-->
<izpack:installation version="5.0"
	xmlns:izpack="http://izpack.org/schema/installation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://izpack.org/schema/installation http://izpack.org/schema/installation/izpack-installation-5.0.xsd">

	<info>
		<appname>REGARDS</appname>
		<appversion>@{regards.izpack.installer.version}</appversion>
		<appsubpath>regards</appsubpath>
		<javaversion>@{java.version}</javaversion>
		<requiresjdk>no</requiresjdk>
		<url>https://github.com/regards</url>
		<pack-compression-format>gz</pack-compression-format>
		<authors>
			<author name="CS" email="regards@c-s.fr" />
		</authors>
	</info>

	<locale>
		<langpack iso3="eng" />
		<langpack iso3="fra" />
	</locale>

	<logging>
		<log-file pattern="regards_install.log" append="false" level="ALL" />
	</logging>

	<guiprefs width="800" height="800" resizable="no">
		<modifier key="useSplashScreen" value="3000" />
		<modifier key="useHeadingPanel" value="yes" />
		<modifier key="headingBackgroundColor" value="0x00193b50" />
		<modifier key="headingPanelCounter" value="progressbar" />
		<modifier key="headingPanelCounterPos" value="inNavigationPanel" />
		<modifier key="headingImageOnLeft" value="yes" />
		<modifier key="headingImageBorderSize" value="0" />
		<modifier key="showDebugWindow" value="true" />
	</guiprefs>

	<!-- Regards custom panels, buttons, validator ... -->
	<jar src="custom/custom-components.jar" />
	
	<!-- JDBC database drivers -->
	<jar src="lib/postgresql-42.1.1.jre7.jar" />
	
	<!-- Elasticsearch transport drivers -->
	<jar src="lib/elasticsearch-5.1.1.jar" />
	<jar src="lib/hppc-0.7.1.jar" />
	<jar src="lib/httpclient-4.5.3.jar" />
	<jar src="lib/log4j-api-2.9.1.jar" />
	<jar src="lib/jackson-core-2.8.1.jar" />
	<jar src="lib/joda-time-2.7.jar" />
	<jar src="lib/lang-mustache-client-5.1.1.jar" />
	<jar src="lib/lucene-analyzers-common-6.3.0.jar" />
	<jar src="lib/lucene-backward-codecs-6.3.0.jar" />
	<jar src="lib/lucene-core-6.3.0.jar" />
	<jar src="lib/lucene-grouping-6.3.0.jar" />
	<jar src="lib/lucene-highlighter-6.3.0.jar" />
	<jar src="lib/lucene-join-6.3.0.jar" />
	<jar src="lib/lucene-memory-6.3.0.jar" />
	<jar src="lib/lucene-misc-6.3.0.jar" />
	<jar src="lib/lucene-queries-6.3.0.jar" />
	<jar src="lib/lucene-queryparser-6.3.0.jar" />
	<jar src="lib/lucene-suggest-6.3.0.jar" />
	<jar src="lib/lucene-sandbox-6.3.0.jar" />
	<jar src="lib/lucene-spatial-6.3.0.jar" />
	<jar src="lib/lucene-spatial-extras-6.3.0.jar" />
	<jar src="lib/lucene-spatial3d-6.3.0.jar" />
	<jar src="lib/netty-3.10.6.Final.jar" />
	<jar src="lib/netty-all-4.1.16.Final.jar" />
	<jar src="lib/percolator-client-5.1.1.jar" />
	<jar src="lib/reindex-client-5.1.1.jar" />
	<jar src="lib/transport-5.1.1.jar" />
	<jar src="lib/transport-netty3-client-5.1.1.jar" />
	<jar src="lib/transport-netty4-client-5.1.1.jar" />
	<jar src="lib/t-digest-3.0.jar" />
	
	<jar src="lib/amqp-client-3.6.3.jar" />
	
	<jar src="lib/slf4j-api-1.7.21.jar" />
	<jar src="lib/logback-classic-1.1.7.jar" />
	<jar src="lib/logback-core-1.1.7.jar" />
	<jar src="lib/log4j-core-2.6.2.jar" />

	<resources>
		<res id="Splash.image" src="images/splash.jpg" />
		<res id="Heading.image" src="images/heading.png" />
		<res id="InfoPanel.info" src="doc/readme.txt" parse="yes" />
		<res id="LicencePanel.licence" src="legal/License.txt" />
		<res id="userInputSpec.xml" src="userInputSpec.xml" parse="yes"
			type="xml" />
		<res id="ProcessPanel.Spec.xml" src="ProcessPanel.Spec.xml" parse="yes"
			type="xml" />
		<res id="CustomLangPack.xml" src="langpacks/CustomLangPack.xml" />
		<res id="CustomLangPack.xml_fra" src="langpacks/CustomLangPack.xml_fra" />
		<res id="userInputLang.xml" src="langpacks/userInputLang.xml_eng" />
		<res id="userInputLang.xml_fra" src="langpacks/userInputLang.xml_fra" />
	</resources>

	<variables>
		<!-- Security -->
		<variable name="regards.config.regards.microservices.exec.user"
			value="regards" />
		<variable name="regards.config.regards.microservices.regards.group"
			value="regards" />
		<variable name="regards.config.regards.microservices.exec.group"
			value="rsexec" />
		<variable name="regards.config.regards.microservices.admin.group"
			value="rsadmin" />
		<variable name="regards.config.regards.microservices.runtime.group"
			value="rsrun" />

		<!-- Common -->
		<variable name="regards.config.first.project" value="project1" />

		<!-- Config -->
		<variable name="config.count" value="0" /> <!-- TODO: Don't think we can have multiple -->
		<variable name="config.host" value="0.0.0.0" />
		<variable name="config.port" value="8888" />
		<variable name="config.xmx" value="128m" />

		<!-- Registry -->
		<variable name="registry.count" value="0" />
		<variable name="regards.config.cloud.registry.host" value="0.0.0.0" />
		<variable name="regards.config.cloud.registry.port" value="8761" />
		<variable name="regards.config.cloud.registry.xmx" value="128m" />

		<!-- Gateway -->
		<variable name="gateway.count" value="0" />
		<variable name="gateway.host" value="0.0.0.0" />
		<variable name="gateway.port" value="8000" />
		<variable name="gateway.xmx" value="128m" />

		<!-- Message broker -->
		<variable name="regards.config.spring.rabbitmq.host" value="localhost" />
		<variable name="regards.config.spring.rabbitmq.port" value="5672" />
		<variable name="regards.config.spring.rabbitmq.username"
			value="" />
		<variable name="regards.config.spring.rabbitmq.password"
			value="" />
		<variable name="regards.config.regards.amqp.management.host"
			value="localhost" />
		<variable name="regards.config.regards.amqp.management.port"
			value="15672" />

		<!-- SMTP -->
		<variable name="spring.mail.host" value="messagerie.si.c-s.fr" />
		<variable name="spring.mail.port" value="25" />
		<variable name="spring.mail.username" value="" />
		<variable name="spring.mail.password" value="" />

		<!-- Admin -->
		<variable name="admin.count" value="0" />
		<variable name="admin.host" value="0.0.0.0" />
		<variable name="admin.port" value="8777" />
		<variable name="admin.xmx" value="300m" />
		<variable name="regards.config.admin.regards.accounts.root.user.login"
			value="" />
		<variable name="regards.config.admin.regards.accounts.root.user.password"
			value="" />
		<variable name="regards.config.admin.regards.jpa.instance.datasource.url"
			value="localhost:5432/rs_admin_instance" />
		<variable
			name="regards.config.admin.regards.jpa.instance.datasource.user.name"
			value="" />
		<variable
			name="regards.config.admin.regards.jpa.instance.datasource.password"
			value="" />
		<variable name="regards.config.admin.regards.jpa.multitenant.tenants.url.1"
			value="localhost:5432/rs_admin_tenant0" />
		<variable
			name="regards.config.admin.regards.jpa.multitenant.tenants.user.name.1"
			value="" />
		<variable
			name="regards.config.admin.regards.jpa.multitenant.tenants.password.1"
			value="" />

		<!-- AccountPanel -->
		<variable name="regards.accounts.validity.duration" value="30" />
		<variable name="regards.config.admin.accounts.password.regex"
			value="[a-z0-9]*" />
		<variable name="regards.config.admin.accounts.password.rules"
			value="Password should contain letters or numbers" />
		<variable name="regards.config.admin.accounts.password.validity.duration"
			value="350" />
		<variable name="regards.config.admin.accounts.failed.authentication.max"
			value="5" />

		<!-- Authentication -->
		<variable name="authentication.count" value="0" />
		<variable name="authentication.host" value="0.0.0.0" />
		<variable name="authentication.port" value="8889" />
		<variable name="authentication.xmx" value="128m" />
		<variable
			name="regards.config.gateway.regards.jpa.multitenant.tenants.url.1"
			value="localhost:5432/rs_gateway_tenant0" />
		<variable
			name="regards.config.gateway.regards.jpa.multitenant.tenants.user.name.1"
			value="" />
		<variable
			name="regards.config.gateway.regards.jpa.multitenant.tenants.password.1"
			value="" />

		<!-- DAM -->
		<variable name="dam.count" value="0" />
		<variable name="dam.host" value="0.0.0.0" />
		<variable name="dam.port" value="8080" />
		<variable name="dam.xmx" value="1500m" />
		<variable name="regards.config.dam.regards.jpa.multitenant.tenants.url.1"
			value="localhost:5432/rs_dam_tenant0" />
		<variable
			name="regards.config.dam.regards.jpa.multitenant.tenants.user.name.1"
			value="" />
		<variable
			name="regards.config.dam.regards.jpa.multitenant.tenants.password.1"
			value="" />
		<variable name="regards.config.elasticsearch.address" value="" />
		<variable name="regards.config.elasticsearch.host" value="localhost" />
		<variable name="regards.config.elasticsearch.cluster.name"
			value="regards" />
		<variable name="regards.config.elasticsearch.tcp.port" value="9300" />

		<!-- Catalog -->
		<variable name="catalog.count" value="0" />
		<variable name="catalog.host" value="0.0.0.0" />
		<variable name="catalog.port" value="4444" />
		<variable name="catalog.xmx" value="1g" />
		<variable
			name="regards.config.catalog.regards.jpa.multitenant.tenants.url.1"
			value="localhost:5432/rs_catalog_tenant0" />
		<variable
			name="regards.config.catalog.regards.jpa.multitenant.tenants.user.name.1"
			value="" />
		<variable
			name="regards.config.catalog.regards.jpa.multitenant.tenants.password.1"
			value="" />

		<!-- Access Instance -->
		<variable name="access-instance.count" value="0" />
		<variable name="access-instance.host" value="0.0.0.0" />
		<variable name="access-instance.port" value="8990" />
		<variable name="access-instance.xmx" value="128m" />
		<variable
			name="regards.config.access.instance.regards.jpa.instance.datasource.url"
			value="localhost:5432/rs_access_instance" />
		<variable
			name="regards.config.access.instance.regards.jpa.instance.datasource.user.name"
			value="" />
		<variable
			name="regards.config.access.instance.regards.jpa.instance.datasource.password"
			value="" />

		<!-- Access Project -->
		<variable name="access-project.count" value="0" />
		<variable name="access-project.host" value="0.0.0.0" />
		<variable name="access-project.port" value="9990" />
		<variable name="access-project.xmx" value="300m" />
		<variable
			name="regards.config.access.project.regards.jpa.multitenant.tenants.url.1"
			value="localhost:5432/rs_access_tenant0" />
		<variable
			name="regards.config.access.project.regards.jpa.multitenant.tenants.user.name.1"
			value="" />
		<variable
			name="regards.config.access.project.regards.jpa.multitenant.tenants.password.1"
			value="" />

		<!-- Frontend -->
		<variable name="frontend.count" value="0" />
		<variable name="frontend.host" value="localhost" />
		<variable name="frontend.port" value="3333" />
		<variable name="frontend.xmx" value="256m" />
		<variable name="regards.config.cloud.gateway.url" value="http://localhost:8000" />

		<!-- Internal variables for workflow management -->
		<variable name="installation.type" value="full" />
		<variable name="security.level" value="normal" />

	</variables>

	<conditions>
		<condition type="variable" id="isSecurityEnforced">
			<name>security.level</name>
			<value>enforce</value>
		</condition>
		<condition type="packselection" id="selected.config">
			<name>config</name>
		</condition>
		<condition type="packselection" id="selected.registry">
			<name>registry</name>
		</condition>
		<condition type="packselection" id="selected.gateway">
			<name>gateway</name>
		</condition>
		<condition type="packselection" id="selected.admin">
			<name>admin</name>
		</condition>
		<condition type="packselection" id="selected.authentication">
			<name>authentication</name>
		</condition>
		<condition type="packselection" id="selected.dam">
			<name>dam</name>
		</condition>
		<condition type="packselection" id="selected.catalog">
			<name>catalog</name>
		</condition>
		<condition type="packselection" id="selected.access">
			<name>access</name>
		</condition>
		<condition type="or" id="at.least.one.backend.pack.selected">
			<condition type="ref" refid="selected.config" />
			<condition type="ref" refid="selected.registry" />
			<condition type="ref" refid="selected.gateway" />
			<condition type="ref" refid="selected.admin" />
			<condition type="ref" refid="selected.authentication" />
			<condition type="ref" refid="selected.dam" />
			<condition type="ref" refid="selected.catalog" />
			<condition type="ref" refid="selected.access" />
		</condition>
		<condition type="or" id="at.least.one.db.configured">
			<condition type="ref" refid="selected.admin" />
			<condition type="ref" refid="selected.authentication" />
			<condition type="ref" refid="selected.dam" />
			<condition type="ref" refid="selected.catalog" />
			<condition type="ref" refid="selected.access" />
		</condition>
		<condition type="variable" id="isHidden">
			<name>security.level</name>
			<value>enforce</value>
		</condition>
	</conditions>

	<panels>
		<panel classname="HelloPanel" />
		<panel classname="LicencePanel" />
		<panel classname="TargetPanel" />
		<panel classname="PacksPanel" />
		<panel classname="UserInputPanel" id="SelectSecurityLevelPanel" />
		<panel classname="UserInputPanel" id="ConfigSecurityPanel"
			condition="isSecurityEnforced" />
		<panel classname="UserInputPanel" id="LinkToExistingConfigPanel"
			condition="!izpack.selected.config" />
		<panel classname="UserInputPanel" id="ProjectPanel" condition="izpack.selected.config" />
		<panel classname="UserInputPanel" id="ConfigPanel" condition="izpack.selected.config">
			<validator
				classname="fr.cnes.regards.deployment.izpack.custom.validator.ValidatorConfigPanel" />
		</panel>
		<panel classname="UserInputPanel" id="RabbitmqPanel"
			condition="at.least.one.backend.pack.selected" />
		<panel classname="UserInputPanel" id="RegistryPanel" condition="izpack.selected.registry">
			<validator
				classname="fr.cnes.regards.deployment.izpack.custom.validator.ValidatorRegistryPanel" />
		</panel>
		<panel classname="UserInputPanel" id="GatewayPanel" condition="izpack.selected.gateway">
			<validator
				classname="fr.cnes.regards.deployment.izpack.custom.validator.ValidatorGatewayPanel" />
		</panel>
		<panel classname="UserInputPanel" id="AdminPanel" condition="izpack.selected.admin">
			<validator
				classname="fr.cnes.regards.deployment.izpack.custom.validator.ValidatorAdminPanel" />
		</panel>
		<panel classname="UserInputPanel" id="AccountsPanel" condition="izpack.selected.admin" />
		<panel classname="UserInputPanel" id="SmtpPanel" condition="izpack.selected.admin" />
		<panel classname="UserInputPanel" id="AuthenticationPanel"
			condition="izpack.selected.authentication">
			<validator
				classname="fr.cnes.regards.deployment.izpack.custom.validator.ValidatorAuthenticationPanel" />
		</panel>
		<panel classname="UserInputPanel" id="DamPanel" condition="izpack.selected.dam">
			<validator
				classname="fr.cnes.regards.deployment.izpack.custom.validator.ValidatorDamPanel" />
		</panel>
		<panel classname="UserInputPanel" id="CatalogPanel" condition="izpack.selected.catalog">
			<validator
				classname="fr.cnes.regards.deployment.izpack.custom.validator.ValidatorCatalogPanel" />
		</panel>
		<panel classname="UserInputPanel" id="AccessInstancePanel"
			condition="izpack.selected.access">
			<validator
				classname="fr.cnes.regards.deployment.izpack.custom.validator.ValidatorAccessInstancePanel" />
		</panel>
		<panel classname="UserInputPanel" id="AccessProjectPanel"
			condition="izpack.selected.access">
			<validator
				classname="fr.cnes.regards.deployment.izpack.custom.validator.ValidatorAccessProjectPanel" />
		</panel>
		<panel classname="UserInputPanel" id="FrontendPanel" condition="izpack.selected.frontend">
			<validator
				classname="fr.cnes.regards.deployment.izpack.custom.validator.ValidatorFrontendPanel" />
		</panel>
		<panel classname="UserInputPanel" id="CheckJdbcConnectionsPanel"
			condition="at.least.one.db.configured" />
		<panel classname="SummaryPanel" />
		<panel classname="InstallPanel" />
		<panel classname="ProcessPanel" />
		<panel classname="FinishPanel" />
	</panels>

	<packs>
		<!-- Pack names of components MUST match the ComponentType enum -->
		<!-- /!\ Mind the order of the packs -->
		<pack name="core" required="true">
			<description>Core installation. Required for any component.
			</description>
			<file targetdir="$INSTALL_PATH" src="doc/readme.txt" override="true" />
			<file targetdir="$INSTALL_PATH" src="legal/License.txt"
				override="true" />
			<file targetdir="$INSTALL_PATH/REGARDS/config" src="config/system.properties"
				override="true" />
			<file targetdir="$INSTALL_PATH/REGARDS/config" src="config/bootstrap.properties"
				override="true" />
			<fileset dir="bin/" targetdir="$INSTALL_PATH/REGARDS/bin"
				override="true">
				<include name="*" />
			</fileset>
			<file src="sbin/microservice.sh" targetdir="$INSTALL_PATH/REGARDS/sbin"
				override="true" />
			<file src="sbin/microservice_regards.sh" targetdir="$INSTALL_PATH/REGARDS/sbin"
				override="true" />
			<fileset dir="lib/" targetdir="$INSTALL_PATH/REGARDS/lib"
				override="true">
				<include name="*" />
			</fileset>
			<fileset dir="custom" targetdir="$INSTALL_PATH/REGARDS/lib"
				override="true">
				<include name="*.jar" />
			</fileset>
			<parsable type="javaprop"
				targetfile="$INSTALL_PATH/REGARDS/config/system.properties" />
			<parsable type="javaprop"
				targetfile="$INSTALL_PATH/REGARDS/config/bootstrap.properties" />
			<executable type="bin" stage="never" keep="true">
				<fileset targetdir="$INSTALL_PATH/REGARDS/bin" includes="*" />
				<fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" />
			</executable>
		</pack>

		<pack name="config" required="false" preselected="true">
			<description>Microservice providing configuration to any other
				microservice
			</description>
			<fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS"
				override="true">
				<include name="bootstrap-config.jar" />
			</fileset>
			<file src="sbin/microservice_config.sh" targetdir="$INSTALL_PATH/REGARDS/sbin"
				override="true" />
			<fileset dir="config/BOOT-INF/classes/regards" targetdir="$INSTALL_PATH/REGARDS/config/regards"
				override="true">
				<include name="*" />
			</fileset>
			<parsable type="javaprop">
				<fileset targetdir="$INSTALL_PATH/REGARDS/config/regards">
					<include name="*.properties" />
				</fileset>
			</parsable>
			<executable type="bin" stage="never" keep="true">
				<fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" />
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="config" />
					<arg value="-c" />
					<arg value="${config.instanceList}" />
				</args>
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_component_wait_rule_list.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="config" />
					<arg value="-w" />
					<arg value="${config.waitRuleList}" />
				</args>
			</executable>
		</pack>

		<pack name="registry" required="false" preselected="true">
			<description>Microservice registering other microservices in the
				cloud and handling load balancing
			</description>
			<fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS"
				override="true">
				<include name="bootstrap-registry.jar" />
			</fileset>
			<file src="sbin/microservice_registry.sh" targetdir="$INSTALL_PATH/REGARDS/sbin"
				override="true" />
			<executable type="bin" stage="never" keep="true">
				<fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" />
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="registry" />
					<arg value="-c" />
					<arg value="${registry.instanceList}" />
				</args>
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_component_wait_rule_list.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="registry" />
					<arg value="-w" />
					<arg value="${registry.waitRuleList}" />
				</args>
			</executable>
		</pack>

		<pack name="gateway" required="false" preselected="true">
			<description>Gateway between clients and all microservices
			</description>
			<fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS"
				override="true">
				<include name="bootstrap-gateway.jar" />
			</fileset>
			<file src="sbin/microservice_gateway.sh" targetdir="$INSTALL_PATH/REGARDS/sbin"
				override="true" />
			<executable type="bin" stage="never" keep="true">
				<fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" />
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="gateway" />
					<arg value="-c" />
					<arg value="${gateway.instanceList}" />
				</args>
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_component_wait_rule_list.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="gateway" />
					<arg value="-w" />
					<arg value="${gateway.waitRuleList}" />
				</args>
			</executable>
		</pack>

		<pack name="admin" required="false" preselected="true">
			<description>Microservice handling system's administration
			</description>
			<fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS"
				override="true">
				<include name="bootstrap-administration.jar" />
			</fileset>
			<file src="sbin/microservice_admin.sh" targetdir="$INSTALL_PATH/REGARDS/sbin"
				override="true" />
			<executable type="bin" stage="never" keep="true">
				<fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" />
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="admin" />
					<arg value="-c" />
					<arg value="${admin.instanceList}" />
				</args>
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_component_wait_rule_list.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="admin" />
					<arg value="-w" />
					<arg value="${admin.waitRuleList}" />
				</args>
			</executable>
		</pack>

		<pack name="authentication" required="false" preselected="true">
			<description>Microservice dedicated to users' authentication
			</description>
			<fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS"
				override="true">
				<include name="bootstrap-authentication.jar" />
			</fileset>
			<file src="sbin/microservice_authentication.sh" targetdir="$INSTALL_PATH/REGARDS/sbin"
				override="true" />
			<executable type="bin" stage="never" keep="true">
				<fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" />
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="authentication" />
					<arg value="-c" />
					<arg value="${authentication.instanceList}" />
				</args>
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_component_wait_rule_list.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="authentication" />
					<arg value="-w" />
					<arg value="${authentication.waitRuleList}" />
				</args>
			</executable>
		</pack>

		<pack name="dam" required="false" preselected="true">
			<description>REGARDS Data Management service installation
			</description>
			<fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS"
				override="true">
				<include name="bootstrap-dam.jar" />
			</fileset>
			<file src="sbin/microservice_dam.sh" targetdir="$INSTALL_PATH/REGARDS/sbin"
				override="true" />
			<executable type="bin" stage="never" keep="true">
				<fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" />
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="dam" />
					<arg value="-c" />
					<arg value="${dam.instanceList}" />
				</args>
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_component_wait_rule_list.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="dam" />
					<arg value="-w" />
					<arg value="${dam.waitRuleList}" />
				</args>
			</executable>
		</pack>

		<pack name="catalog" required="false" preselected="true">
			<description>REGARDS Catalog service installation</description>
			<fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS"
				override="true">
				<include name="bootstrap-catalog.jar" />
			</fileset>
			<file src="sbin/microservice_catalog.sh" targetdir="$INSTALL_PATH/REGARDS/sbin"
				override="true" />
			<executable type="bin" stage="never" keep="true">
				<fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" />
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="catalog" />
					<arg value="-c" />
					<arg value="${catalog.instanceList}" />
				</args>
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_component_wait_rule_list.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="catalog" />
					<arg value="-w" />
					<arg value="${catalog.waitRuleList}" />
				</args>
			</executable>
		</pack>

		<pack name="access" required="false" preselected="true">
			<description>REGARDS Access service installation</description>
			<fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS"
				override="true">
				<include name="bootstrap-access-instance.jar" />
				<include name="bootstrap-access-project.jar" />
			</fileset>
			<file src="sbin/microservice_access-instance.sh" targetdir="$INSTALL_PATH/REGARDS/sbin"
				override="true" />
			<file src="sbin/microservice_access-project.sh" targetdir="$INSTALL_PATH/REGARDS/sbin"
				override="true" />
			<executable type="bin" stage="never" keep="true">
				<fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" />
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="access-instance" />
					<arg value="-c" />
					<arg value="${access-instance.instanceList}" />
				</args>
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_component_wait_rule_list.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="access-instance" />
					<arg value="-w" />
					<arg value="${access-instance.waitRuleList}" />
				</args>
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="access-project" />
					<arg value="-c" />
					<arg value="${access-project.instanceList}" />
				</args>
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_component_wait_rule_list.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="access-project" />
					<arg value="-w" />
					<arg value="${access-project.waitRuleList}" />
				</args>
			</executable>
		</pack>

		<pack name="frontend" required="false" preselected="true">
			<description>Web application serving the frontend</description>
			<fileset dir="microservices/" targetdir="$INSTALL_PATH/REGARDS"
				override="true">
				<include name="bootstrap-frontend.*ar" />
			</fileset>
			<fileset dir="config/static" targetdir="$INSTALL_PATH/REGARDS/www"
				override="true">
				<include name="**/*" />
			</fileset>
			<file src="sbin/microservice_frontend.sh" targetdir="$INSTALL_PATH/REGARDS/sbin"
				override="true" />
			<parsable type="plain">
				<fileset targetdir="$INSTALL_PATH/REGARDS/www" includes="**/*.js" />
			</parsable>
			<executable type="bin" stage="never" keep="true">
				<fileset targetdir="$INSTALL_PATH/REGARDS/sbin" includes="*" />
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_microservice_confile.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="frontend" />
					<arg value="-c" />
					<arg value="${frontend.instanceList}" />
				</args>
			</executable>
			<executable
				targetfile="$INSTALL_PATH/REGARDS/bin/create_component_wait_rule_list.groovy"
				type="bin" stage="postinstall" failure="abort" keep="true">
				<os family="unix" />
				<args>
					<arg value="-i" />
					<arg value="$INSTALL_PATH/REGARDS" />
					<arg value="-t" />
					<arg value="frontend" />
					<arg value="-w" />
					<arg value="${frontend.waitRuleList}" />
				</args>
			</executable>
		</pack>

	</packs>

</izpack:installation>
