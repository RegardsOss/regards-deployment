<?xml version="1.0" encoding="UTF-8"?>
<!--
 Copyright 2017-2018 CNES - CENTRE NATIONAL d'ETUDES SPATIALES
 
 This file is part of REGARDS.
 
 REGARDS is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 REGARDS is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with REGARDS. If not, see <http://www.gnu.org/licenses/>.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<artifactId>installer</artifactId>
	
	<name>Installer</name>
	<description>Required files describing an Izpack installer</description>
	<url>https://regardsoss.github.io/</url>
	<inceptionYear>2016</inceptionYear>
	<licenses>
		<license>
			<name>GNU General Public License (GNU GPL)</name>
			<url>http://www.gnu.org/licenses/gpl.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	<organization>
		<name>CNES</name>
		<url>https://cnes.fr/fr</url>
	</organization>
	<developers>
		<developer>
			<name>REGARDS Team</name>
			<organization>CS Syst√®mes d'Information</organization>
			<organizationUrl>http://www.c-s.fr</organizationUrl>
		</developer>
	</developers>

	<!-- Launch IzPack automatically -->
	<packaging>jar</packaging>

	<parent>
		<groupId>fr.cnes.regards.deployment</groupId>
		<artifactId>izpack</artifactId>
		<version>0.4.0</version>
	</parent>

	<properties>
		<staging.dir>${project.build.directory}/staging</staging.dir>
		<temp.dir.filtering>target/config-to-filter</temp.dir.filtering>
	</properties>

	<build>
		<defaultGoal>package</defaultGoal>
		<finalName>REGARDS-OSS-Installer</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-resources</id>
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${staging.dir}</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/izpack</directory>
									<includes>
										<include>**/*</include>
									</includes>
									<filtering>false</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-dependency-plugin</artifactId>
				<configuration>
					<excludeTransitive>false</excludeTransitive>
					<stripVersion>true</stripVersion>
					<overWriteReleases>true</overWriteReleases>
					<overWriteSnapshots>true</overWriteSnapshots>
					<overWriteIfNewer>true</overWriteIfNewer>
					<excludeScope>system</excludeScope>
				</configuration>
				<executions>
					<execution>
						<id>copy-bootstrap</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${staging.dir}/microservices</outputDirectory>
							<includeArtifactIds>
								bootstrap-config,
								bootstrap-registry,
								bootstrap-gateway,
								bootstrap-administration,
								bootstrap-administration-instance,
								bootstrap-storage,
	 							bootstrap-dataprovider,
								bootstrap-order,
								bootstrap-ingest,
								bootstrap-dam, 
								bootstrap-catalog,
								bootstrap-access-instance,
								bootstrap-access-project,
								bootstrap-frontend, 
								bootstrap-authentication
 							</includeArtifactIds>
						</configuration>
					</execution>
					<execution>
						<id>copy-izpack-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<stripVersion>true</stripVersion>
							<overWriteIfNewer>true</overWriteIfNewer>
							<overWriteReleases>true</overWriteReleases>
							<excludeTransitive>false</excludeTransitive>
							<overWriteSnapshots>true</overWriteSnapshots>
							<outputDirectory>${staging.dir}/custom</outputDirectory>
							<includeArtifactIds>custom-components</includeArtifactIds>
						</configuration>
					</execution>
					<execution>
						<id>unpack-back</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.cloud</groupId>
									<artifactId>bootstrap-config</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/regards</outputDirectory>
							<includes>BOOT-INF/classes/regards/*.properties</includes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-logback-config</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.cloud</groupId>
									<artifactId>bootstrap-config</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/config</outputDirectory>
							<includes>BOOT-INF/classes/logback.xml</includes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-logback-registry</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.cloud</groupId>
									<artifactId>bootstrap-registry</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/registry</outputDirectory>
							<includes>BOOT-INF/classes/logback.xml</includes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-logback-gateway</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.cloud</groupId>
									<artifactId>bootstrap-gateway</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/gateway</outputDirectory>
							<includes>BOOT-INF/classes/logback.xml</includes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-logback-admin</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.microservices.administration</groupId>
									<artifactId>bootstrap-administration</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/admin</outputDirectory>
							<includes>BOOT-INF/classes/logback.xml</includes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-logback-admin-instance</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.microservices.administration</groupId>
									<artifactId>bootstrap-administration-instance</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/admin-instance</outputDirectory>
							<includes>BOOT-INF/classes/logback.xml</includes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-logback-authentication</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.microservices.authentication</groupId>
									<artifactId>bootstrap-authentication</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/authentication</outputDirectory>
							<includes>BOOT-INF/classes/logback.xml</includes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-logback-dam</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.microservices.dam</groupId>
									<artifactId>bootstrap-dam</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/dam</outputDirectory>
							<includes>BOOT-INF/classes/logback.xml</includes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-logback-catalog</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.microservices.catalog</groupId>
									<artifactId>bootstrap-catalog</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/catalog</outputDirectory>
							<includes>BOOT-INF/classes/logback.xml</includes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-logback-access-projet</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.microservices.access</groupId>
									<artifactId>bootstrap-access-project</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/access-project</outputDirectory>
							<includes>BOOT-INF/classes/logback.xml</includes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-logback-access-instance</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.microservices.access</groupId>
									<artifactId>bootstrap-access-instance</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/access-instance</outputDirectory>
							<includes>BOOT-INF/classes/logback.xml</includes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-logback-provider</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.microservices.dataprovider</groupId>
									<artifactId>bootstrap-dataprovider</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/dataprovider</outputDirectory>
							<includes>BOOT-INF/classes/logback.xml</includes>
						</configuration>
					</execution>
					<execution>
						<id>unpack-logback-order</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.microservices.order</groupId>
									<artifactId>bootstrap-order</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/order</outputDirectory>
							<includes>BOOT-INF/classes/logback.xml</includes>
						</configuration>
					</execution>
 					<execution>
						<id>unpack-logback-ingest</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards.microservices.ingestion</groupId>
									<artifactId>bootstrap-ingest</artifactId>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/ingest</outputDirectory>
							<includes>BOOT-INF/classes/logback.xml</includes>
						</configuration>
					</execution>
 					<execution>
						<id>unpack-front</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>fr.cnes.regards</groupId>
									<artifactId>bootstrap-frontend</artifactId>
									<type>war</type>
								</artifactItem>
							</artifactItems>
							<outputDirectory>${temp.dir.filtering}/frontend</outputDirectory>
							<includes>static/conf/**/*,static/plugins/**/*,static/img/**/*,static/html/**/*</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.izpack</groupId>
				<artifactId>izpack-maven-plugin</artifactId>
				<version>${izpack.version}</version>
				<executions>
					<execution>
						<id>standard-installer</id>
						<phase>package</phase>
						<goals>
							<goal>izpack</goal>
						</goals>
						<configuration>
							<baseDir>${staging.dir}</baseDir>
							<mkdirs>true</mkdirs>
							<installFile>${staging.dir}/install.xml</installFile>
						</configuration>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>fr.cnes.regards.deployment</groupId>
						<artifactId>custom-components</artifactId>
						<version>${project.version}</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<dependency>
			<groupId>fr.cnes.regards.cloud</groupId>
			<artifactId>bootstrap-gateway</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.cnes.regards.cloud</groupId>
			<artifactId>bootstrap-config</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.cnes.regards.cloud</groupId>
			<artifactId>bootstrap-registry</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.cnes.regards.microservices.administration</groupId>
			<artifactId>bootstrap-administration</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.cnes.regards.microservices.administration</groupId>
			<artifactId>bootstrap-administration-instance</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.cnes.regards.microservices.catalog</groupId>
			<artifactId>bootstrap-catalog</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.cnes.regards.microservices.access</groupId>
			<artifactId>bootstrap-access-instance</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.cnes.regards.microservices.access</groupId>
			<artifactId>bootstrap-access-project</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.cnes.regards.microservices.dam</groupId>
			<artifactId>bootstrap-dam</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.cnes.regards</groupId>
			<artifactId>bootstrap-frontend</artifactId>
			<type>war</type>
		</dependency>
		<dependency>
			<groupId>
				fr.cnes.regards.microservices.authentication
			</groupId>
			<artifactId>bootstrap-authentication</artifactId>
		</dependency>
		<dependency>
			<groupId>fr.cnes.regards.deployment</groupId>
			<artifactId>custom-components</artifactId>
		</dependency>
		<dependency>
    			<groupId>org.elasticsearch</groupId>
    			<artifactId>elasticsearch</artifactId>
    		</dependency>
		<dependency>
			<groupId>
				fr.cnes.regards.microservices.storage
			</groupId>
			<artifactId>bootstrap-storage</artifactId>
		</dependency>
		<dependency>
			<groupId>
				fr.cnes.regards.microservices.dataprovider
			</groupId>
			<artifactId>bootstrap-dataprovider</artifactId>
		</dependency>
		<dependency>
			<groupId>
				fr.cnes.regards.microservices.order
			</groupId>
			<artifactId>bootstrap-order</artifactId>
		</dependency>
		<dependency>
			<groupId>
				fr.cnes.regards.microservices.ingestion
			</groupId>
			<artifactId>bootstrap-ingest</artifactId>
		</dependency>
	</dependencies>

	<profiles>
		<profile>
			<id>development</id>
		</profile>
		<profile>
			<id>delivery</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-resources-plugin</artifactId>
						<executions>
							<execution>
								<id>filter-unpack-resources</id>
								<!-- here the phase you need -->
								<phase>process-resources</phase>
								<goals>
									<goal>copy-resources</goal>
								</goals>
								<configuration>
									<outputDirectory>${staging.dir}/config</outputDirectory>
									<resources>
										<resource>
											<directory>${temp.dir.filtering}</directory>
											<filtering>true</filtering>
										</resource>
									</resources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
				<filters>
					<filter>src/main/filters/delivery.properties</filter>
				</filters>
			</build>
		</profile>
	</profiles>
</project>
